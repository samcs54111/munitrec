<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="munit-record-suite12.xml" />
	<munit:test name="munit-recordFlow-test12" doc:id="2a94cf33-460b-4381-a46c-b461462b4259" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Set Variable" doc:id="ddb65d03-cf74-4c03-a58a-a07b9d55dd58" processor="set-variable">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ece59540-54d8-4592-ac31-e8e568570900" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="destination" value="#[output application/java --- readUrl('classpath://munitrecordFlowtest12\mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:spy doc:name="Spy Matches regex" doc:id="c266e703-e29b-4687-8c17-d595602ab235" processor="validation:matches-regex">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="e6b3edcd-3839-48c4-a4a7-99ba8b670257" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<munit-tools:assert doc:name="Assert attributes" doc:id="93ed1454-e4eb-4522-9733-53e2cc061b83" message="The attributes do not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import munitrecordFlowtest12::spy_assert_attributes
---
spy_assert_attributes::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:before-call>
				<munit-tools:after-call >
					<munit-tools:assert doc:name="Assert payload" doc:id="2c4c393d-7477-4845-9de2-6238e44443bd" message="The payload does not match">
						<munit-tools:that ><![CDATA[#[%dw 2.0
import munitrecordFlowtest12::spy_assert_payload
---
spy_assert_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
					</munit-tools:assert>
				</munit-tools:after-call>
			</munit-tools:spy>
			<munit:set-event doc:name="Set Input" doc:id="308dea91-7acc-424b-a574-71d463caa3d8" >
				<munit:payload value="#[output text/plain --- readUrl('classpath://munitrecordFlowtest12\set-event_payload.dwl')]" encoding="UTF-8" mediaType="text/plain" />
				<munit:attributes value="#[readUrl('classpath://munitrecordFlowtest12\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to munit-recordFlow" doc:id="52544c4b-e000-4487-a1ff-440e6aaf3ebd" name="munit-recordFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="2a008225-2241-4912-bd7a-8f850c841013" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import munitrecordFlowtest12::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Matches regex" doc:id="1c399903-767b-4b09-86a2-807a52cf15f3" processor="validation:matches-regex" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="e6b3edcd-3839-48c4-a4a7-99ba8b670257" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
